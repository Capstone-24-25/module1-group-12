---
title: "Biomarkers of ASD"
author: "Mai Uyen Huynh, Valerie De La Fuente, Reese Karo, Ivan Li"
date: last-modified
published-title: "Updated"
editor: visual
format: html
code-copy: true
execute:
  message: false
  warning: false
  echo: false
  cache: true
---

```{r}
# load any other packages and read data here
library(ggplot2)
library(readr)
library(dplyr)
library(reshape2)
library(tidyverse)
library(infer)
library(randomForest)
library(tidymodels)
library(modelr)
library(yardstick)
library(kableExtra)

# Read in the data
setwd('../data')
biomarker_raw <- read_csv('biomarker-raw.csv', show_col_types=FALSE)

# Set seed for reproducibility
set.seed(123)
```

## Abstract

Write a brief one-paragraph abstract that describes the contents of your write-up.

## Dataset

Write a brief data description, including: how data were obtained; sample characteristics; variables measured; and data preprocessing. This can be largely based on the source paper and should not exceed 1-2 paragraphs.

## Summary of published analysis

Summarize the methodology of the paper in 1-3 paragraphs. You need not explain the methods in depth as we did in class; just indicate what methods were used and how they were combined. If possible, include a diagram that depicts the methodological design. (Quarto has support for [GraphViz and Mermaid flowcharts](https://quarto.org/docs/authoring/diagrams.html).) Provide key results: the proteins selected for the classifier and the estimated accuracy.

## Findings

Summarize your findings here. I've included some subheaders in a way that seems natural to me; you can structure this section however you like.

### Impact of preprocessing and outliers

```{r}
# Subset all proteins in the dataset and convert to numeric values
proteins_numeric <- biomarker_raw %>% filter(Group %in% c("ASD", "TD")) %>%
  dplyr::select(contains("protein", ignore.case= TRUE)) %>% 
  mutate(across(everything(), as.numeric))

# Randomly sample a vector of 10 protein names
random_sample <- sample(names(proteins_numeric), 10)
```

```{r}
# Looking at distribution of raw values for the random sample of proteins

# Plot 10 histograms; one histogram per randomly sampled protein
proteins_numeric %>% 
  select(random_sample) %>% 
  pivot_longer(everything()) %>% 
  ggplot(aes(x = value)) + geom_histogram() +
  facet_wrap(vars(name))
```

```{r}
# Looking at distribution of raw values for the random sample of proteins that are log-transformed

  # Log-transform all proteins
  proteins_numeric_log <- proteins_numeric %>%
    mutate(across(everything(), ~ log(. + 1)))
  
  # Plot 10 histograms; one histogram per randomly sampled protein

proteins_numeric_log %>% 
  select(random_sample) %>% 
  pivot_longer(everything()) %>% 
  ggplot(aes(x = value)) + geom_histogram() +
  facet_wrap(vars(name))
```

We used histograms to apply exploratory data analysis on 10 randomly sampled proteins. Viewing their distributions, we can see that all of the data is right-skewed. This indicates that there are some individual outliers that contain a higher level of that protein. The 'secreted frizzled-related protein' is the only protein in the random sample that has a bit more of a symmetrical distribution. After log-transforming that same random sample of proteins and viewing their distributions, the data is much more symmetrical. When working with data that is asymmetrical, applying a log-transformation can normalize the data, improve model fit, and reduce outliers.

```{r}
setwd('../data')
load(file = 'biomarker-clean.RData')
temp <- biomarker_clean %>% 
  filter(if_any(CHIP:PLXB2, ~ . ==3))


outlier_count <- temp %>% 
  rowwise() %>%
  mutate(outliers = sum(c_across(CHIP:PLXB2) == 3)) %>% 
  select(group, ados,outliers, everything())


#box plot of number of outliers per subject in each group
outlier_count %>% 
  ggplot(aes(x = group, y = outliers)) +
  geom_boxplot() +
  labs(title = 'Outliers per individual by group',
       x = 'Group',
       y = 'Number of outliers') 

#total outliers per group and number of people with outliers per group
outlier_count %>% 
  group_by(group) %>%
  summarise(total_out = sum(outliers), subjects_out = n()) %>% 
  kable(label = 'Total Outliers and Number of Subjects with Outliers per Group')

#top 10 subjects with most outliers
outlier_count %>% 
  arrange(desc(outliers)) %>% 
  select(group, outliers) %>%
  head(10) %>% 
  kable()
```

From there, we wanted to take a look at which group these individuals with outliers were coming from. To analyze this, we worked with any values that were equal to 3, since any outliers in the data were trimmed to 3. After visualizing the outlier count per group (ASD, TD) in a box plot and tabling the data, we see there is a total of 74 subjects with at least one outlier in the ASD group, and 77 in the TD group. However, when we visualise this with a box plot, we see there is a denser set of outliers in the TD class compared to the ASD class, which implies that there are more subjects in TD with over 25 outliers compared to ASD. TD also has a higher amount of total outliers as a group (ASD 813, TD 1161) and of the subjects with the top 10 most outliers, 7 are from the TD group and 3 are from the ASD group. In conclusion, while many subjects have at least 1 outlier, the subjects with a very high amount of outliers mostly belong to the TD group.

### Methodlogical variations

Task 3

### Improved classifier

Task 4
